import openpyxl
from openpyxl.styles import Alignment
from openpyxl.styles import Font
from openpyxl.styles import PatternFill
from openpyxl.styles import Border, Side


try:
    wb = openpyxl.load_workbook(filename='Рабочий файл.xlsx', data_only=True)
    # print(wb.sheetnames)
    if len(wb.sheetnames) == 0:
        raise FileNotFoundError
except FileNotFoundError:
    wb = openpyxl.Workbook()

# вывод количества листов
# print(wb.sheetnames)
A = [
    '',
    'Форма1',
    'Подключение к ИС РЦК / Изменение прав доступа',
    'Контактная информация инициатора заявки',
    'ФИО',
    'Контактный телефон / Должность',
    'E-mail',
    'Название организации, ИНН организации',
    'Отдел/департамент/подразделение',
    'Адрес / Номер кабинета/комнаты',
    'Дата оформления заявки',
    'Контактная информация пользователя, которому требуется подключение/ изменение права доступа',
    'ФИО',
    'Контактный телефон / Должность',
    'E-mail',
    'Учетная запись в службе каталога',
    'Название организации, ИНН организации',
    'Отдел/департамент/подразделение',
    'Адрес / Номер кабинета/комнаты',
    'Требуемое действие (выделить необходимое)',
    'Подключение к ИС РЦК',
    'Причина подключения/изменения прав доступа пользователя',
    '',
    'Роль (права) в автоматизированной системе',
    'Инициатор платежа (валюта)',
    'Инициатор платежа (рубли)',
    'Ответственный за ЭЦП 1-ого лица организации',
    'Ответственный за ЭЦП 2-ого лица организации',
    'Ответственный за загрузку выписок',
    'Ответственный за согласование платежа',
    'Специалист по отправке платежей (валюта)',
    'Специалист по отправке платежей (рубли)',
    'Предоставить/ограничить (ненужное зачеркнуть) доступ к данным по организациям:',
    '',
    'Согласование заявки:',
    'Руководитель подразделения пользователя',
    '',
    'ФИО',
    'Владелец информационного ресурса',
    '',
    'ФИО',
]
abc = 'ABCDEF'
choose = '1'
print('Здравствуйте! Для выбора действия, пожалуйста введите номер действия которое хотите совершить и нажмите Enter: ')
# Выбор создать нового или же просмотреть информацию о существующем
while choose != '0':
    try:
        choose = input('\nВыберите действие: \n[0]Выход\n[1] Просмотреть информацию о сотруднике\n[2] Добавить нового '
                       'сотрудника\n'
                       '[3] Справка \nВаш вариант: ')
        if choose == '0':
            quit()
        elif choose == '3':
            print('\nКраткая информация о программе:\nДля того чтобы просмотреть информацию о сотруднике '
                  'необходимо лишь ввести его номер согласно описанному в Excel листе(он написан в названии листа. '
                  'Просьба не изменять названия листов в Excel\nДля того чтобы ввести информацию о том кто вводит и '
                  'для кого. '
                  'Предоставляемые права вводятся в столбик подряд. '
                  '\nВыводится информация так же в столбик сначала для "просмотра", потом для "создание" и тд. '
                  'Для ввода рекомендуется вводить только "Да" или "Нет"'
                  '\nФинансовая политика:' 
                  '\n1.Обязательность подписания платежных документов двумя подписями, '
                  'причем лица с правом первой подписи не должны иметь права второй подписи;'
                  '\n2.Обязательность разделения между должностными лицами '
                  'функций инициирования и согласования платежей;' 
                  '\n3.Обязательность разделения функций отправки платежных документов в банк и загрузки '
                  'банковских выписок по счетам.'
                  '\nПожалуйста, придерживайтесь финансовой политики.')
        elif choose == '1':
            worker_name = 'Сотрудник_' + input('Введите номер сотрудника: ')
            for i in wb.sheetnames:
                if i == worker_name:
                    sheet = wb[i]
                    print('Информация о сотруднике')
                    print('Контактная информация инициатора заявки: ')
                    for j in range(4, 11):
                        print(sheet[f'A{j}'].value + ':', sheet[f'B{j}'].value)
                    print(
                        '\nКонтактная информация пользователя, которому требуется подключение/ изменение права '
                        'доступа: ')
                    for j in range(7):
                        print(sheet[f'A{j + 12}'].value + ':', sheet[f'B{j + 12}'].value)
                    print('\nПрава для просмотра')
                    print(f'Инициатор платежа (валюта): {sheet["B24"].value}')
                    print(f'Инициатор платежа (рубли): {sheet["B25"].value}')
                    print(f'Ответственный за ЭЦП 1-ого лица организации: {sheet["B26"].value}')
                    print(f'Ответственный за ЭЦП 2-ого лица организации: {sheet["B27"].value}')
                    print(f'Ответственный за загрузку выписок {sheet["B28"].value}')
                    print(f'Ответственный за согласование платежа: {sheet["B29"].value}')
                    print(f'Специалист по отправке платежей (валюта): {sheet["B30"].value}')
                    print(f'Специалист по отправке платежей (рубли): {sheet["B31"].value}')

                    print('\nПрава для создания')
                    print(f'Инициатор платежа (валюта): {sheet["C24"].value}')
                    print(f'Инициатор платежа (рубли): {sheet["C25"].value}')
                    print(f'Ответственный за ЭЦП 1-ого лица организации: {sheet["C26"].value}')
                    print(f'Ответственный за ЭЦП 2-ого лица организации: {sheet["C27"].value}')
                    print(f'Ответственный за загрузку выписок {sheet["C28"].value}')
                    print(f'Ответственный за согласование платежа: {sheet["C29"].value}')
                    print(f'Специалист по отправке платежей (валюта): {sheet["C30"].value}')
                    print(f'Специалист по отправке платежей (рубли): {sheet["C31"].value}')

                    print('\nПрава для изменения')
                    print(f'Инициатор платежа (валюта): {sheet["D24"].value}')
                    print(f'Инициатор платежа (рубли): {sheet["D25"].value}')
                    print(f'Ответственный за ЭЦП 1-ого лица организации: {sheet["D26"].value}')
                    print(f'Ответственный за ЭЦП 2-ого лица организации: {sheet["D27"].value}')
                    print(f'Ответственный за загрузку выписок {sheet["D28"].value}')
                    print(f'Ответственный за согласование платежа: {sheet["D29"].value}')
                    print(f'Специалист по отправке платежей (валюта): {sheet["D30"].value}')
                    print(f'Специалист по отправке платежей (рубли): {sheet["D31"].value}')

                    print('\nПрава для обработки')
                    print(f'Инициатор платежа (валюта): {sheet["E24"].value}')
                    print(f'Инициатор платежа (рубли): {sheet["E25"].value}')
                    print(f'Ответственный за ЭЦП 1-ого лица организации: {sheet["E26"].value}')
                    print(f'Ответственный за ЭЦП 2-ого лица организации: {sheet["E27"].value}')
                    print(f'Ответственный за загрузку выписок {sheet["E28"].value}')
                    print(f'Ответственный за согласование платежа: {sheet["E29"].value}')
                    print(f'Специалист по отправке платежей (валюта): {sheet["E30"].value}')
                    print(f'Специалист по отправке платежей (рубли): {sheet["E31"].value}')

                    print('\nПрава для Удаления')
                    print(f'Инициатор платежа (валюта): {sheet["F24"].value}')
                    print(f'Инициатор платежа (рубли): {sheet["F25"].value}')
                    print(f'Ответственный за ЭЦП 1-ого лица организации: {sheet["F26"].value}')
                    print(f'Ответственный за ЭЦП 2-ого лица организации: {sheet["F27"].value}')
                    print(f'Ответственный за загрузку выписок {sheet["F28"].value}')
                    print(f'Ответственный за согласование платежа: {sheet["F29"].value}')
                    print(f'Специалист по отправке платежей (валюта): {sheet["F30"].value}')
                    print(f'Специалист по отправке платежей (рубли): {sheet["F31"].value}', '\n')
        elif choose == '2':
            # ----------------------------------------------------------------------------------------------------------------------------------------
            # создаем новую страничку и делаем ее активной
            if len(wb.sheetnames) == 1:
                # print(wb.sheetnames)
                if wb.sheetnames[0] == 'Sheet':
                    sheet = wb['Sheet']
                    sheet.title = 'Сотрудник_1'
                elif wb.sheetnames[0] == 'Сотрудник_1':
                    wb.create_sheet(index=len(wb.sheetnames) + 1, title=f"Сотрудник_{str(len(wb.sheetnames) + 1)}")
                    sheet = wb[f"Сотрудник_{str(len(wb.sheetnames))}"]
            else:
                wb.create_sheet(index=len(wb.sheetnames) + 1, title=f"Сотрудник_{str(len(wb.sheetnames) + 1)}")
                sheet = wb[f"Сотрудник_{str(len(wb.sheetnames))}"]
            # Делаем ширину столбиков
            for i in abc:
                if i == 'A':
                    sheet.column_dimensions['A'].width = 50
                else:
                    sheet.column_dimensions[f'{i}'].width = 15

            # Делаем соединение клеточек
            for i in range(1, 4):
                sheet.merge_cells(f'A{i}:F{i}')
            for i in range(4, 20):
                if i == 11 or i == 19:
                    sheet.merge_cells(f'A{i}:F{i}')
                else:
                    sheet.merge_cells(f'B{i}:F{i}')
            for i in range(37, 41):
                sheet.merge_cells(f'E{i}:F{i}')
            sheet.merge_cells('A21:F21')
            sheet.merge_cells('A32:F32')
            sheet.merge_cells('A34:F34')
            sheet.merge_cells('A35:F35')
            sheet.merge_cells('A38:F38')

            # форматирование текста
            for i in abc:
                sheet[f'{i}37'].alignment = Alignment(horizontal='center')
                sheet[f'{i}40'].alignment = Alignment(horizontal='center')

            # шрифты
            for i in range(1, 4):
                sheet[f'A{i}'].font = Font(bold=True)
                # цвет
                sheet[f'A{i}'].fill = PatternFill(start_color='C0C0C0',
                                                  end_color='C0C0C0', fill_type='solid')
            sheet['A4'].font = Font(bold=True)
            sheet['A6'].font = Font(bold=True)
            sheet['A11'].font = Font(bold=True)
            sheet['A12'].font = Font(bold=True)
            sheet['A14'].font = Font(bold=True)
            sheet['A19'].font = Font(bold=True)
            sheet['A21'].font = Font(bold=True)
            sheet['B20'].font = Font(bold=True)
            sheet['B23'].font = Font(bold=True)
            sheet['C23'].font = Font(bold=True)
            sheet['D23'].font = Font(bold=True)
            sheet['E23'].font = Font(bold=True)
            sheet['F23'].font = Font(bold=True)
            sheet['A32'].font = Font(bold=True)
            sheet['A34'].font = Font(bold=True)

            # заливка фона для некоторых ячеек
            sheet['A11'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')
            sheet['A19'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')
            sheet['A21'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')
            sheet['A23'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')
            sheet['B23'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')
            sheet['C23'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')
            sheet['D23'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')
            sheet['E23'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')
            sheet['F23'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')
            sheet['A32'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')
            sheet['A34'].fill = PatternFill(start_color='C0C0C0', end_color='C0C0C0', fill_type='solid')

            # настройка границ
            for j in abc:
                for i in range(1, 41):
                    sheet[f'{j}{i}'].border = Border(left=Side(border_style='medium', color='000000'),
                                                     right=Side(border_style='medium', color='000000'),
                                                     top=Side(border_style='medium', color='000000'),
                                                     bottom=Side(border_style='medium', color='000000'),
                                                     vertical=Side(border_style='medium', color='000000'),
                                                     horizontal=Side(border_style='medium', color='000000'))

            print('Контактная информация инициатора заявки: ')
            # ввод значений пользователя
            B = []
            for i in range(7):
                B.append(input(F"Введите {A[i + 4]}: "))

            # второй ввод
            print('\nКонтактная информация пользователя, которому требуется подключение/ изменение права доступа: ')
            B2 = []
            for i in range(7):
                B2.append(input(F"Введите {A[i + 12]}: "))

            # ввод значений в поля ролей
            print('\nПредоставьте доступ к данным для сотрудника: \n')
            print('Пожалуйста введите "да" чтобы сотрудник имел доступ и "нет", чтобы ограничить доступ к '
                  'определенной роли.\nПожалуйста обратите внимание на финансовую политику компании, указанную в '
                  'Справке программы')
            print('Права для просмотра')
            B24 = input('Введите: Инициатор платежа (валюта) ').lower()
            B25 = input('Введите: Инициатор платежа (рубли) ').lower()
            B26 = input('Введите: Ответственный за ЭЦП 1-ого лица организации ').lower()
            B27 = input('Введите: Ответственный за ЭЦП 2-ого лица организации ').lower()
            B28 = input('Введите: Ответственный за загрузку выписок ').lower()
            B29 = input('Введите: Ответственный за согласование платежа ').lower()
            B30 = input('Введите: Специалист по отправке платежей (валюта) ').lower()
            B31 = input('Введите: Специалист по отправке платежей (рубли) ').lower()

            print('\nПрава для создания')
            C24 = input('Введите: Инициатор платежа (валюта) ').lower()
            C25 = input('Введите: Инициатор платежа (рубли) ').lower()
            if C24 == 'да' or C25 == 'да':
                print('Подсказка: Сотрудник не может одновременно иметь функции инициирования и согласования платежей')
                C26 = input('Введите: Ответственный за ЭЦП 1-ого лица организации ').lower()
                if C26 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно Отвественным за ЭЦП 2-х лиц одновременно')
                    C27 = 'нет'
                else:
                    C27 = input('Введите: Ответственный за ЭЦП 2-ого лица организации ').lower()
                C28 = input('Введите: Ответственный за загрузку выписок ').lower()
                if C28 == 'да':
                    print("Подсказка: Сотрудник не может быть одновременно специалистом по отправке платежей и "
                          "отвественным за загрузку выписок")
                    C29 = 'нет'
                    C30 = 'нет'
                    C31 = 'нет'
                else:
                    C29 = 'нет'
                    C30 = input('Введите: Специалист по отправке платежей (валюта) ').lower()
                    C31 = input('Введите: Специалист по отправке платежей (рубли) ').lower()
            else:
                C26 = input('Введите: Ответственный за ЭЦП 1-ого лица организации ').lower()
                if C26 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно Отвественным за ЭЦП 2-х лиц одновременно')
                    C27 = 'нет'
                else:
                    C27 = input('Введите: Ответственный за ЭЦП 2-ого лица организации ').lower()
                C28 = input('Введите: Ответственный за загрузку выписок ').lower()
                if C28 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно специалистом по отправке платежей и '
                          'отвественным за загрузку выписок')
                    C29 = input('Введите: Ответственный за согласование платежа ').lower()
                    C30 = 'нет'
                    C31 = 'нет'
                else:
                    C29 = input('Введите: Ответственный за согласование платежа ').lower()
                    C30 = input('Введите: Специалист по отправке платежей (валюта) ').lower()
                    C31 = input('Введите: Специалист по отправке платежей (рубли) ').lower()

            print('\nПрава для изменения')
            D24 = input('Введите: Инициатор платежа (валюта) ').lower()
            D25 = input('Введите: Инициатор платежа (рубли) ').lower()
            if D24 == 'да' or D25 == 'да':
                print('Подсказка: Сотрудник не может одновременно иметь функции инициирования и согласования платежей')
                D26 = input('Введите: Ответственный за ЭЦП 1-ого лица организации ').lower()
                if D26 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно Отвественным за ЭЦП 2-х лиц одновременно')
                    D27 = 'нет'
                else:
                    D27 = input('Введите: Ответственный за ЭЦП 2-ого лица организации ').lower()
                D28 = input('Введите: Ответственный за загрузку выписок ').lower()
                if D28 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно специалистом по отправке платежей и '
                          'отвественным за загрузку выписок')
                    D29 = 'нет'
                    D30 = 'нет'
                    D31 = 'нет'
                else:
                    D29 = 'нет'
                    D30 = input('Введите: Специалист по отправке платежей (валюта) ').lower()
                    D31 = input("Введите: Специалист по отправке платежей (рубли) ").lower()
            else:
                D26 = input('Введите: Ответственный за ЭЦП 1-ого лица организации ').lower()
                if D26 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно Отвественным за ЭЦП 2-х лиц одновременно')
                    D27 = 'нет'
                else:
                    D27 = input('Введите: Ответственный за ЭЦП 2-ого лица организации ').lower()
                D28 = input('Введите: Ответственный за загрузку выписок ').lower()
                if D28 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно специалистом по отправке платежей и '
                          'отвественным за загрузку выписок')
                    D29 = input('Введите: Ответственный за согласование платежа ').lower()
                    D30 = 'нет'
                    D31 = 'нет'
                else:
                    D29 = input('Введите: Ответственный за согласование платежа ').lower()
                    D30 = input('Введите: Специалист по отправке платежей (валюта) ').lower()
                    D31 = input('Введите: Специалист по отправке платежей (рубли) ').lower()

            print('\nПрава для обработки')
            E24 = input('Введите: Инициатор платежа (валюта) ').lower()
            E25 = input('Введите: Инициатор платежа (рубли) ').lower()
            if E24 == 'да' or E25 == 'да':
                print('Подсказка: Сотрудник не может одновременно иметь функции инициирования и согласования платежей')
                E26 = input('Введите: Ответственный за ЭЦП 1-ого лица организации ').lower()
                if E26 == 'да':
                    print("Подсказка: Сотрудник не может быть одновременно Отвественным за ЭЦП 2-х лиц одновременно")
                    E27 = 'нет'
                else:
                    E27 = input('Введите: Ответственный за ЭЦП 2-ого лица организации ').lower()
                E28 = input('Введите: Ответственный за загрузку выписок ').lower()
                if E28 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно специалистом по отправке платежей и '
                          'отвественным за загрузку выписок')
                    E29 = 'нет'
                    E30 = 'нет'
                    E31 = 'нет'
                else:
                    E29 = 'нет'
                    E30 = input('Введите: Специалист по отправке платежей (валюта) ').lower()
                    E31 = input('Введите: Специалист по отправке платежей (рубли) ').lower()
            else:
                E26 = input('Введите: Ответственный за ЭЦП 1-ого лица организации ').lower()
                if E26 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно Отвественным за ЭЦП 2-х лиц одновременно')
                    E27 = 'нет'
                else:
                    E27 = input('Введите: Ответственный за ЭЦП 2-ого лица организации ').lower()
                E28 = input('Введите: Ответственный за загрузку выписок ').lower()
                if B28 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно специалистом по отправке платежей и '
                          'отвественным за загрузку выписок')
                    E29 = input('Введите: Ответственный за согласование платежа ').lower()
                    E30 = 'нет'
                    E31 = 'нет'
                else:
                    E29 = input('Введите: Ответственный за согласование платежа ').lower()
                    E30 = input('Введите: Специалист по отправке платежей (валюта) ').lower()
                    E31 = input('Введите: Специалист по отправке платежей (рубли) ').lower()

            print('\nПрава для Удаления')
            F24 = input('Введите: Инициатор платежа (валюта) ').lower()
            F25 = input('Введите: Инициатор платежа (рубли) ').lower()
            if F24 == 'да' or F25 == 'да':
                print('Подсказка: Сотрудник не может одновременно иметь функции инициирования и согласования платежей')
                F26 = input('Введите: Ответственный за ЭЦП 1-ого лица организации ').lower()
                if F26 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно Отвественным за ЭЦП 2-х лиц одновременно')
                    F27 = 'нет'
                else:
                    F27 = input('Введите: Ответственный за ЭЦП 2-ого лица организации ').lower()
                F28 = input('Введите: Ответственный за загрузку выписок ').lower()
                if F28 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно специалистом по отправке платежей и '
                          'отвественным за загрузку выписок')
                    F29 = 'нет'
                    F30 = 'нет'
                    F31 = 'нет'
                else:
                    F29 = 'нет'
                    F30 = input('Введите: Специалист по отправке платежей (валюта) ').lower()
                    F31 = input('Введите: Специалист по отправке платежей (рубли) ').lower()
            else:
                F26 = input('Введите: Ответственный за ЭЦП 1-ого лица организации ').lower()
                if F26 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно Отвественным за ЭЦП 2-х лиц одновременно')
                    F27 = 'нет'
                else:
                    F27 = input('Введите: Ответственный за ЭЦП 2-ого лица организации ').lower()
                F28 = input('Введите: Ответственный за загрузку выписок ').lower()
                if F28 == 'да':
                    print('Подсказка: Сотрудник не может быть одновременно специалистом по отправке платежей и '
                          'отвественным за загрузку выписок')
                    F29 = input('Введите: Ответственный за согласование платежа ').lower()
                    F30 = 'нет'
                    F31 = 'нет'
                else:
                    F29 = input('Введите: Ответственный за согласование платежа ').lower()
                    F30 = input('Введите: Специалист по отправке платежей (валюта) ').lower()
                    F31 = input('Введите: Специалист по отправке платежей (рубли) ').lower()

            # вывод значений
            for i in range(1, len(A)):
                sheet['A' + str(i)] = str(A[i])
            sheet['B20'] = 'Изменение прав доступа'
            sheet['B23'] = 'Просмотр'
            sheet['C23'] = 'Создание'
            sheet['D23'] = 'Изменение'
            sheet['E23'] = 'Обработка'
            sheet['F23'] = 'Удаление'

            sheet['B37'] = 'Должность'
            sheet['C37'] = 'Дата'
            sheet['D37'] = 'Подпись'
            sheet['E37'] = 'Должность'

            sheet['B40'] = 'Должность'
            sheet['C40'] = 'Дата'
            sheet['D40'] = 'Подпись'
            sheet['E40'] = 'Должность'

            # ввод введенных значений:
            for i in range(len(B)):
                sheet['B' + str(i + 4)] = str(B[i])

            for i in range(len(B2)):
                sheet['B' + str(i + 12)] = str(B2[i])

            sheet['B24'] = B24
            sheet['B25'] = B25
            sheet['B26'] = B26
            sheet['B27'] = B27
            sheet['B28'] = B28
            sheet['B29'] = B29
            sheet['B30'] = B30
            sheet['B31'] = B31

            sheet['C24'] = C24
            sheet['C25'] = C25
            sheet['C26'] = C26
            sheet['C27'] = C27
            sheet['C28'] = C28
            sheet['C29'] = C29
            sheet['C30'] = C30
            sheet['C31'] = C31

            sheet['D24'] = D24
            sheet['D25'] = D25
            sheet['D26'] = D26
            sheet['D27'] = D27
            sheet['D28'] = D28
            sheet['D29'] = D29
            sheet['D30'] = D30
            sheet['D31'] = D31

            sheet['E24'] = E24
            sheet['E25'] = E25
            sheet['E26'] = E26
            sheet['E27'] = E27
            sheet['E28'] = E28
            sheet['E29'] = E29
            sheet['E30'] = E30
            sheet['E31'] = E31

            sheet['F24'] = F24
            sheet['F25'] = F25
            sheet['F26'] = F26
            sheet['F27'] = F27
            sheet['F28'] = F28
            sheet['F29'] = F29
            sheet['F30'] = F30
            sheet['F31'] = F31

            wb.save('Рабочий файл.xlsx')
            print(f'\nУспешно создан новый сотрудник "{sheet.title}"\n')
        else:
            raise ValueError
    except ValueError:
        print('Введите корректный вариант!\n')
